[{"name":"app.R","content":"library(shiny)\r\nlibrary(readr)\r\nlibrary(dplyr)\r\nlibrary(DT)\r\n\r\ndownloadButton <- function(...) {\r\n  tag <- shiny::downloadButton(...)\r\n  tag$attribs$download <- NULL\r\n  tag\r\n}\r\n\r\nui <- fluidPage(\r\n  titlePanel(\"Conflicting Records Finder\"),\r\n  sidebarLayout(\r\n    sidebarPanel(\r\n      fileInput(\"file1\", \"Choose CSV File 1\", accept = c(\".csv\")),\r\n      numericInput(\"skip1\", \"Skip rows in File 1:\", value = 0, min = 0, step = 1),\r\n      numericInput(\"slice1\", \"Max rows to read from File 1 (0 = all):\", value = 0, min = 0, step = 1),\r\n      tags$hr(),\r\n      fileInput(\"file2\", \"Choose CSV File 2\", accept = c(\".csv\")),\r\n      numericInput(\"skip2\", \"Skip rows in File 2:\", value = 0, min = 0, step = 1),\r\n      numericInput(\"slice2\", \"Max rows to read from File 2 (0 = all):\", value = 0, min = 0, step = 1),\r\n      tags$hr(),\r\n      fileInput(\"file3\", \"Choose CSV File 3 (optional)\", accept = c(\".csv\")),\r\n      numericInput(\"skip3\", \"Skip rows in File 3:\", value = 0, min = 0, step = 1),\r\n      numericInput(\"slice3\", \"Max rows to read from File 3 (0 = all):\", value = 0, min = 0, step = 1),\r\n      tags$hr(),\r\n      actionButton(\"go\", \"Find Conflicts\")\r\n    ),\r\n    mainPanel(\r\n      DTOutput(\"conflicts\"),\r\n      downloadButton(\"downloadData\", \"Download Report as CSV\")\r\n    )\r\n  )\r\n)\r\n\r\nserver <- function(input, output, session) {\r\n  # Helper to read and slice a table\r\n  read_table <- function(file, skip, slice_n) {\r\n    req(file)\r\n    tbl <- read_csv(file$datapath, skip = skip)\r\n    if (slice_n > 0) tbl <- slice(tbl, 1:slice_n)\r\n    tbl\r\n  }\r\n  \r\n  conflicts_data <- eventReactive(input$go, {\r\n    # Read each file\r\n    tbl1 <- read_table(input$file1, input$skip1, input$slice1)\r\n    tbl2 <- read_table(input$file2, input$skip2, input$slice2)\r\n    tables <- list(File1 = tbl1, File2 = tbl2)\r\n    if (!is.null(input$file3)) {\r\n      tbl3 <- read_table(input$file3, input$skip3, input$slice3)\r\n      tables$File3 <- tbl3\r\n    }\r\n    \r\n    result_list <- list()\r\n    # For each table, find rows not present in any of the others\r\n    for (name in names(tables)) {\r\n      this_tbl <- tables[[name]]\r\n      others <- bind_rows(tables[names(tables) != name])\r\n      # explicitly join by all common columns to replicate default anti_join behavior\r\n      common_cols <- intersect(names(this_tbl), names(others))\r\n      uniq <- anti_join(this_tbl, others)\r\n      if (nrow(uniq) > 0) {\r\n        uniq <- mutate(uniq, Source = name)\r\n        result_list[[name]] <- uniq\r\n      }\r\n    }\r\n    if (length(result_list) > 0) {\r\n      bind_rows(result_list)\r\n    } else {\r\n      tibble(Message = \"No conflicting records found.\")\r\n    }\r\n  })\r\n  \r\n  output$conflicts <- renderDT({\r\n    datatable(conflicts_data(), options = list(pageLength = 10, scrollX = TRUE))\r\n  })\r\n  \r\n  output$downloadData <- downloadHandler(\r\n    filename = function() {\r\n      paste0(\"conflicting_records_\", Sys.Date(), \".csv\")\r\n    },\r\n    content = function(file) {\r\n      write_csv(conflicts_data(), file)\r\n    }\r\n  )\r\n}\r\n\r\nshinyApp(ui, server)\r\n","type":"text"},{"name":"README.md","content":"# file_comparitor\r\nShiny App For csv file comparisons\r\n","type":"text"}]
