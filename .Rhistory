spending2020_messy <- spending_2020|>
messy::messy_date_formats()|>
messy::add_whitespace() |>
messy::make_missing(messiness = 0.05)|>
messy::change_case(messiness = 0.05)
harvest2020_messy
getwd()
readr::write_csv(harvest2020_messy, "harvest_2020_messy.csv")
readr::write_csv(planting2020_messy, "planting_2020_messy.csv")
readr::write_csv(spending2020_messy, "spending_2020_messy.csv")
coca_cola <- RKaggle::get_dataset("muhammadatiflatif/coca-cola-stock-data-over-100-years-of-trading")
data
coca_cola
donations <- readr::read_csv("C:\Users\ben29\Downloads\toronto_donations_2022_2024.csv")
donations <- readr::read_csv("C:/Users/ben29/Downloads/toronto_donations_2022_2024.csv")
donations
donations <- readr::read_csv("C:/Users/ben29/Downloads/toronto_donations_2022_2024.csv")|>
dplyr::mutate(`Contact Info` = paste0(
`First Name`,
" ",
`Last Name`,
"; ",
Address,
" ",
`Postal Code`
))|>
dplyr::select(`First Name`,
`Last Name`,
`Address`,
`Contact Info`,
`Donation 2024`,
`Donation 2025`
)
donations <- readr::read_csv("C:/Users/ben29/Downloads/toronto_donations_2022_2024.csv")|>
dplyr::mutate(`Contact Info` = paste0(
`First Name`,
" ",
`Last Name`,
"; ",
Address,
" ",
`Postal Code`
))|>
dplyr::select(`First Name`,
`Last Name`,
`Address`,
`Contact Info`,
`Donation 2024`,
`Donation 2023`
)
donations
donations <- readr::read_csv("C:/Users/ben29/Downloads/toronto_donations_2022_2024.csv")|>
messy::make_missing(messiness = 0.13)|>
dplyr::mutate(`Contact Info` = paste0(
`First Name`,
" ",
`Last Name`,
"; ",
Address,
" ",
`Postal Code`
))|>
dplyr::select(`First Name`,
`Last Name`,
`Address`,
`Contact Info`,
`Donation 2024`,
`Donation 2023`
)
View(donations)
donations <- readr::read_csv("C:/Users/ben29/Downloads/toronto_donations_2022_2024.csv")|>
dplyr::mutate(`Contact Info` = paste0(
`First Name`,
" ",
`Last Name`,
"; ",
Address,
" ",
`Postal Code`
))|>
messy::make_missing(messiness = 0.13)|>
dplyr::select(`First Name`,
`Last Name`,
`Address`,
`Contact Info`,
`Donation 2024`,
`Donation 2023`
)
View(donations)
?messy::make_missing
donations <- readr::read_csv("C:/Users/ben29/Downloads/toronto_donations_2022_2024.csv")|>
dplyr::mutate(`Contact Info` = paste0(
`First Name`,
" ",
`Last Name`,
"; ",
Address,
" ",
`Postal Code`
))|>
messy::make_missing(messiness = 0.13, cols = c(`First Name`, `Last Name`, `Address`, `Donation 2024`, `Donation 2023`))|>
dplyr::select(`First Name`,
`Last Name`,
`Address`,
`Contact Info`,
`Donation 2024`,
`Donation 2023`
)
donations <- readr::read_csv("C:/Users/ben29/Downloads/toronto_donations_2022_2024.csv")|>
dplyr::mutate(`Contact Info` = paste0(
`First Name`,
" ",
`Last Name`,
"; ",
Address,
" ",
`Postal Code`
))|>
messy::make_missing(messiness = 0.13, cols = c('First Name', 'Last Name', 'Address', 'Donation 2024', 'Donation 2023'))|>
dplyr::select(`First Name`,
`Last Name`,
`Address`,
`Contact Info`,
`Donation 2024`,
`Donation 2023`
)
donations
donations <- readr::read_csv("C:/Users/ben29/Downloads/toronto_donations_2022_2024.csv")|>
dplyr::mutate(`Contact Info` = paste0(
`First Name`,
" ",
`Last Name`,
"; ",
Address,
" ",
`Postal Code`
))|>
messy::make_missing(messiness = 0.13, cols = c('First Name', 'Last Name', 'Address', 'Donation 2024', 'Donation 2023'))|>
dplyr::select(`First Name`,
`Last Name`,
`Address`,
`Contact Info`,
`Donation 2024`,
`Donation 2023`
)|>
readr::write_csv("C:/Users/ben29/Downloads/messy_donations_2022_2024.csv")
donations <- readr::read_csv("C:/Users/ben29/Downloads/toronto_donations_2022_2024.csv")
donations
donations <- readr::read_csv("C:/Users/ben29/Downloads/toronto_donations_2022_2024.csv")|>
dplyr::mutate(`Contact Info` = paste0(
`First Name`,
" ",
`Last Name`,
"; ",
Email,
"; ",
Address,
" ",
`Postal Code`
))|>
messy::make_missing(messiness = 0.13, cols = c('First Name', 'Last Name', 'Email' 'Address', 'Donation 2024', 'Donation 2023'))|>
donations <- readr::read_csv("C:/Users/ben29/Downloads/toronto_donations_2022_2024.csv")|>
dplyr::mutate(`Contact Info` = paste0(
`First Name`,
" ",
`Last Name`,
"; ",
Email,
"; ",
Address,
" ",
`Postal Code`
))|>
messy::make_missing(messiness = 0.13, cols = c('First Name', 'Last Name', 'Email', 'Address', 'Donation 2024', 'Donation 2023'))|>
dplyr::select(`First Name`,
`Last Name`,
Email,
`Address`,
`Contact Info`,
`Donation 2024`,
`Donation 2023`
)|>
readr::write_csv("C:/Users/ben29/Downloads/messy_donations_2022_2024.csv")
coffee_ratings <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2020/2020-07-07/coffee_ratings.csv')
names(cofee_ratings)
dplyr::glimpse(coffee_ratings)
coffee_ratings <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2020/2020-07-07/coffee_ratings.csv')
coffee_ratings |>dplyr::glimpse()
coffee_ratings <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2020/2020-07-07/coffee_ratings.csv')|>
dplyr::select(
aroma:moisture
)
coffee_ratings <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2020/2020-07-07/coffee_ratings.csv')|>
dplyr::select(
aroma:moisture
)
coffee_ratings
coffee_ratings <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2020/2020-07-07/coffee_ratings.csv')|>
dplyr::select(
aroma:moisture
)|>
messy::make_missing(0.6)
coffee_ratings <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2020/2020-07-07/coffee_ratings.csv')|>
dplyr::select(
aroma:moisture
)|>
messy::make_missing(messiness = 0.54)
coffee_ratings
coffee_ratings <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2020/2020-07-07/coffee_ratings.csv')|>
dplyr::select(
aroma:moisture
)|>
messy::make_missing(messiness = 0.32)
coffee_ratings
coffee_ratings <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2020/2020-07-07/coffee_ratings.csv')|>
dplyr::select(
aroma:moisture
)|>
messy::make_missing(messiness = 0.32)
readr::write_csv(
coffee_ratings,
"coffee_ratings_missing.csv"
)
getwd()
table_1 <- readr::read_csv("C:\Users\ben29\Downloads\21 Krug Street Inc Statement 08_01_2024 to 03_31_2025.csv", skip = 13)
\
table_1 <- readr::read_csv("C:/Users/ben29/Downloads/21 Krug Street Inc Statement 08_01_2024 to 03_31_2025.csv", skip = 13)
table1
table_1
tail(table_1)
View(table_1)
table_2 <- readr::read_csv("C:/Users/ben29/Downloads/21 Krug Street Inc Statement 08_01_2024 to 03_31_2025 (10.csv", skip = 13)
table_2 <- readr::read_csv("C:/Users/ben29/Downloads/21 Krug Street Inc Statement 08_01_2024 to 03_31_2025 (1).csv", skip = 13)
table_2
table_2|>View()
table_2 <- readr::read_csv("C:/Users/ben29/Downloads/21 Krug Street Inc Statement 08_01_2024 to 03_31_2025 (1).csv", skip = 12)
View(table_2)
table_1 <- readr::read_csv("C:/Users/ben29/Downloads/21 Krug Street Inc Statement 08_01_2024 to 03_31_2025.csv", skip = 13)|>
dplyr::slice(1:220)
table_2 <- readr::read_csv("C:/Users/ben29/Downloads/21 Krug Street Inc Statement 08_01_2024 to 03_31_2025 (1).csv", skip = 12)|>
dplyr::slice(1:221)
dplyr::anti_join(
table_1,
table_2
)
table_1 <- readr::read_csv("C:/Users/ben29/Downloads/21 Krug Street Inc Statement 08_01_2024 to 03_31_2025.csv", skip = 13)|>
dplyr::slice(1:220)
table_2 <- readr::read_csv("C:/Users/ben29/Downloads/21 Krug Street Inc Statement 08_01_2024 to 03_31_2025 (1).csv", skip = 12)|>
dplyr::slice(1:221)
dplyr::anti_join(
table_1,
table_2
)|>
readr::write_csv("C:/Users/ben29/Downloads/21 Krug Street Inc Statement Conflicts.csv")
library(shiny)
library(readr)
library(dplyr)
library(DT)
ui <- fluidPage(
titlePanel("Conflicting Records Finder"),
sidebarLayout(
sidebarPanel(
fileInput("file1", "Choose CSV File 1", accept = c(".csv")),
numericInput("skip1", "Skip rows in File 1:", value = 0, min = 0, step = 1),
numericInput("slice1", "Max rows to read from File 1 (0 = all):", value = 0, min = 0, step = 1),
tags$hr(),
fileInput("file2", "Choose CSV File 2", accept = c(".csv")),
numericInput("skip2", "Skip rows in File 2:", value = 0, min = 0, step = 1),
numericInput("slice2", "Max rows to read from File 2 (0 = all):", value = 0, min = 0, step = 1),
tags$hr(),
fileInput("file3", "Choose CSV File 3 (optional)", accept = c(".csv")),
numericInput("skip3", "Skip rows in File 3:", value = 0, min = 0, step = 1),
numericInput("slice3", "Max rows to read from File 3 (0 = all):", value = 0, min = 0, step = 1),
tags$hr(),
actionButton("go", "Find Conflicts")
),
mainPanel(
DTOutput("conflicts"),
downloadButton("downloadData", "Download Report as CSV")
)
)
)
server <- function(input, output, session) {
read_table <- function(file, skip, slice_n) {
req(file)
tbl <- read_csv(file$datapath, skip = skip)
if (slice_n > 0) tbl <- slice(tbl, 1:slice_n)
tbl
}
conflicts_data <- eventReactive(input$go, {
# Read tables
tbl1 <- read_table(input$file1, input$skip1, input$slice1)
tbl2 <- read_table(input$file2, input$skip2, input$slice2)
tables <- list(File1 = tbl1, File2 = tbl2)
if (!is.null(input$file3)) {
tbl3 <- read_table(input$file3, input$skip3, input$slice3)
tables$File3 <- tbl3
}
result_list <- list()
# For each table, find rows not in others
for (name in names(tables)) {
this_tbl <- tables[[name]]
others <- bind_rows(tables[names(tables) != name])
uniq <- anti_join(this_tbl, others)
if (nrow(uniq) > 0) {
uniq <- mutate(uniq, Source = name)
result_list[[name]] <- uniq
}
}
if (length(result_list) > 0) {
bind_rows(result_list)
} else {
tibble(Message = "No conflicting records found.")
}
})
output$conflicts <- renderDT({
datatable(conflicts_data(), options = list(pageLength = 10, scrollX = TRUE))
})
output$downloadData <- downloadHandler(
filename = function() {
paste0("conflicting_records_", Sys.Date(), ".csv")
},
content = function(file) {
write_csv(conflicts_data(), file)
}
)
}
shinyApp(ui, server)
library(shiny)
library(readr)
library(dplyr)
library(DT)
ui <- fluidPage(
titlePanel("Conflicting Records Finder"),
sidebarLayout(
sidebarPanel(
fileInput("file1", "Choose CSV File 1", accept = c(".csv")),
numericInput("skip1", "Skip rows in File 1:", value = 0, min = 0, step = 1),
numericInput("slice1", "Max rows to read from File 1 (0 = all):", value = 0, min = 0, step = 1),
tags$hr(),
fileInput("file2", "Choose CSV File 2", accept = c(".csv")),
numericInput("skip2", "Skip rows in File 2:", value = 0, min = 0, step = 1),
numericInput("slice2", "Max rows to read from File 2 (0 = all):", value = 0, min = 0, step = 1),
tags$hr(),
fileInput("file3", "Choose CSV File 3 (optional)", accept = c(".csv")),
numericInput("skip3", "Skip rows in File 3:", value = 0, min = 0, step = 1),
numericInput("slice3", "Max rows to read from File 3 (0 = all):", value = 0, min = 0, step = 1),
tags$hr(),
actionButton("go", "Find Conflicts")
),
mainPanel(
DTOutput("conflicts"),
downloadButton("downloadData", "Download Report as CSV")
)
)
)
server <- function(input, output, session) {
# Helper to read and slice a table
read_table <- function(file, skip, slice_n) {
req(file)
tbl <- read_csv(file$datapath, skip = skip)
if (slice_n > 0) tbl <- slice(tbl, 1:slice_n)
tbl
}
conflicts_data <- eventReactive(input$go, {
# Read each file
tbl1 <- read_table(input$file1, input$skip1, input$slice1)
tbl2 <- read_table(input$file2, input$skip2, input$slice2)
tables <- list(File1 = tbl1, File2 = tbl2)
if (!is.null(input$file3)) {
tbl3 <- read_table(input$file3, input$skip3, input$slice3)
tables$File3 <- tbl3
}
result_list <- list()
# For each table, find rows not present in any of the others
for (name in names(tables)) {
this_tbl <- tables[[name]]
others <- bind_rows(tables[names(tables) != name])
# explicitly join by all common columns to replicate default anti_join behavior
common_cols <- intersect(names(this_tbl), names(others))
uniq <- anti_join(this_tbl, others, by = common_cols)
if (nrow(uniq) > 0) {
uniq <- mutate(uniq, Source = name)
result_list[[name]] <- uniq
}
}
if (length(result_list) > 0) {
bind_rows(result_list)
} else {
tibble(Message = "No conflicting records found.")
}
})
output$conflicts <- renderDT({
datatable(conflicts_data(), options = list(pageLength = 10, scrollX = TRUE))
})
output$downloadData <- downloadHandler(
filename = function() {
paste0("conflicting_records_", Sys.Date(), ".csv")
},
content = function(file) {
write_csv(conflicts_data(), file)
}
)
}
shinyApp(ui, server)
table_1 <- readr::read_csv("C:/Users/ben29/Downloads/21 Krug Street Inc Statement 08_01_2024 to 03_31_2025.csv", skip = 13)|>
dplyr::slice(1:220)
table_2 <- readr::read_csv("C:/Users/ben29/Downloads/21 Krug Street Inc Statement 08_01_2024 to 03_31_2025 (1).csv", skip = 12)|>
dplyr::slice(1:221)
dplyr::anti_join(
table_1,
table_2
)|>
readr::write_csv("C:/Users/ben29/Downloads/21 Krug Street Inc Statement Conflicts.csv")
dplyr::anti_join(
table_1,
table_2
)
table_1 <- readr::read_csv("C:/Users/ben29/Downloads/21 Krug Street Inc Statement 08_01_2024 to 03_31_2025.csv", skip = 13)|>
dplyr::slice()
table_2 <- readr::read_csv("C:/Users/ben29/Downloads/21 Krug Street Inc Statement 08_01_2024 to 03_31_2025 (1).csv", skip = 12)|>
dplyr::slice()
dplyr::anti_join(
table_1,
table_2
)
table_1 <- readr::read_csv("C:/Users/ben29/Downloads/21 Krug Street Inc Statement 08_01_2024 to 03_31_2025.csv", skip = 13)
table_2 <- readr::read_csv("C:/Users/ben29/Downloads/21 Krug Street Inc Statement 08_01_2024 to 03_31_2025 (1).csv", skip = 12)
dplyr::anti_join(
table_1,
table_2
)
library(shiny)
library(readr)
library(dplyr)
library(DT)
ui <- fluidPage(
titlePanel("Conflicting Records Finder"),
sidebarLayout(
sidebarPanel(
fileInput("file1", "Choose CSV File 1", accept = c(".csv")),
numericInput("skip1", "Skip rows in File 1:", value = 0, min = 0, step = 1),
numericInput("slice1", "Max rows to read from File 1 (0 = all):", value = 0, min = 0, step = 1),
tags$hr(),
fileInput("file2", "Choose CSV File 2", accept = c(".csv")),
numericInput("skip2", "Skip rows in File 2:", value = 0, min = 0, step = 1),
numericInput("slice2", "Max rows to read from File 2 (0 = all):", value = 0, min = 0, step = 1),
tags$hr(),
fileInput("file3", "Choose CSV File 3 (optional)", accept = c(".csv")),
numericInput("skip3", "Skip rows in File 3:", value = 0, min = 0, step = 1),
numericInput("slice3", "Max rows to read from File 3 (0 = all):", value = 0, min = 0, step = 1),
tags$hr(),
actionButton("go", "Find Conflicts")
),
mainPanel(
DTOutput("conflicts"),
downloadButton("downloadData", "Download Report as CSV")
)
)
)
server <- function(input, output, session) {
# Helper to read and slice a table
read_table <- function(file, skip, slice_n) {
req(file)
tbl <- read_csv(file$datapath, skip = skip)
if (slice_n > 0) tbl <- slice(tbl, 1:slice_n)
tbl
}
conflicts_data <- eventReactive(input$go, {
# Read each file
tbl1 <- read_table(input$file1, input$skip1, input$slice1)
tbl2 <- read_table(input$file2, input$skip2, input$slice2)
tables <- list(File1 = tbl1, File2 = tbl2)
if (!is.null(input$file3)) {
tbl3 <- read_table(input$file3, input$skip3, input$slice3)
tables$File3 <- tbl3
}
result_list <- list()
# For each table, find rows not present in any of the others
for (name in names(tables)) {
this_tbl <- tables[[name]]
others <- bind_rows(tables[names(tables) != name])
# explicitly join by all common columns to replicate default anti_join behavior
common_cols <- intersect(names(this_tbl), names(others))
uniq <- anti_join(this_tbl, others)
if (nrow(uniq) > 0) {
uniq <- mutate(uniq, Source = name)
result_list[[name]] <- uniq
}
}
if (length(result_list) > 0) {
bind_rows(result_list)
} else {
tibble(Message = "No conflicting records found.")
}
})
output$conflicts <- renderDT({
datatable(conflicts_data(), options = list(pageLength = 10, scrollX = TRUE))
})
output$downloadData <- downloadHandler(
filename = function() {
paste0("conflicting_records_", Sys.Date(), ".csv")
},
content = function(file) {
write_csv(conflicts_data(), file)
}
)
}
shinyApp(ui, server)
setwd("file_comparitor")
install.packages("shinylive")
shinylive::export(".",destdir = "docs")
